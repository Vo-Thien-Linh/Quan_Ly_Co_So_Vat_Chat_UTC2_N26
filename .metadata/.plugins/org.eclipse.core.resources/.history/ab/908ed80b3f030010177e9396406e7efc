package entity;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DanhMucDatCho {
	  private List<ThongTinDatCho> dmdc;

	    public DanhMucDatCho() {
	        this.dmdc = new ArrayList<>();
	    }

	    public void ThemThongTinDatCho(ThongTinDatCho ttdc) {
	        this.dmdc.add(ttdc);
	    }

	    public void XuatThongDanhSach() {
	        if (dmdc.isEmpty()) {
	            System.out.println("Danh sách đặt chỗ trống.");
	            return;
	        }
	        for (ThongTinDatCho thongTinDatCho : dmdc) {
	            System.out.println(thongTinDatCho);
	        }
	    }

	    // Câu 7: Lấy danh sách đơn đặt phòng của khách theo tên
	    public void DanhSachDonDatPhongCuaKhach(String tenKhachHang) {
	        boolean found = false;
	        for (ThongTinDatCho thongTinDatCho : dmdc) {
	            if (thongTinDatCho.getTenKhachHang().equalsIgnoreCase(tenKhachHang)) {
	                System.out.println(thongTinDatCho);
	                found = true;
	            }
	        }
	        if (!found) {
	            System.out.println("Không có đơn đặt phòng nào của khách hàng: " + tenKhachHang);
	        }
	    }

	    // Câu 8: Lấy đơn đặt phòng có tổng tiền lớn nhất
	    public ThongTinDatCho DonDatPhongMax() {
	        if (dmdc.isEmpty()) {
	            System.out.println("Danh sách đặt chỗ trống.");
	            return null;
	        }
	        return Collections.max(dmdc, Comparator.comparingDouble(ThongTinDatCho::TinhTongTien));
	    }

	    // Câu 9: Lấy danh sách phòng đơn đã đặt
	    public void LayRaDanhSachPhongDonDaDat() {
	        boolean found = false;
	        for (ThongTinDatCho thongTinDatCho : dmdc) {
	            for (Map.Entry<Phong, Integer> x : thongTinDatCho.getDs().entrySet()) {
	                if (x.getKey() instanceof PhongDon) {
	                    System.out.println(thongTinDatCho);
	                    found = true;
	                }
	            }
	        }
	        if (!found) {
	            System.out.println("Không có phòng đơn nào được đặt.");
	        }
	    }

	    // Câu 10: Sắp xếp danh sách đặt chỗ theo tổng tiền tăng dần
	    public void Sort() {
	        dmdc.sort(Comparator.comparingDouble(ThongTinDatCho::TinhTongTien));
	    }

	    // Câu 11: Thống kê số lượng phòng theo loại
	    public void ThongKeSoLuongPhongTheoLoai() {
	        Map<String, Integer> thongKe = new HashMap<>();
	        thongKe.put("Đơn", 0);
	        thongKe.put("Đôi", 0);
	        thongKe.put("Gia đình", 0);

	        for (ThongTinDatCho thongTinDatCho : dmdc) {
	            for (Map.Entry<Phong, Integer> x : thongTinDatCho.getDs().entrySet()) {
	                if (x.getKey() instanceof PhongDon)
	                    thongKe.put("Đơn", thongKe.get("Đơn") + x.getValue());
	                else if (x.getKey() instanceof PhongDoi)
	                    thongKe.put("Đôi", thongKe.get("Đôi") + x.getValue());
	                else if (x.getKey() instanceof PhongGiaDinh)
	                    thongKe.put("Gia đình", thongKe.get("Gia đình") + x.getValue());
	            }
	        }

	        System.out.println("Đơn: " + thongKe.get("Đơn") + ", Gia đình: " + thongKe.get("Gia đình") + ", Đôi: " + thongKe.get("Đôi"));
	    }
	
	
}
